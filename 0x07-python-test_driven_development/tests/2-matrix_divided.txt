The test suite for the 2-matrix_divided module

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test 01:
	>>> matrix_divided([[1, 2, 3], [4, 5, "6"]], 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 02:
	>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

Test 03:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "3")
	Traceback (most recent call last):
		...
	TypeError: div must be a number

Test 04:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Test 05:
	>>> all([all([round(x, 2) == x for x in row]) for row in matrix_divided([[1, 2, 3], [4, 5, 6]], 3)])
	True

Test 06:
	>>> old_matrix = [[1, 2, 3], [4, 5, 6]]
	>>> old_matrix is matrix_divided(old_matrix, 3)
	False
